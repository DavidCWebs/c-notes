call malloc_stats()
call dumpMallinfo()
start
call dumpMallinfo()
call malloc_stats()
call (char *) malloc_stats()
s
s
s
s
s
call (char *) malloc_stats()
call (char *) malloc_stats() >> heap
s
call (char *) malloc_stats() >> heap
call (char *) malloc_stats()
call (char *) malloc_stats()
n
call (char *) malloc_stats()
p *str
p str
x str
x &str
x arr
x200 arr
x200b arr
x/200b arr
x/200b arr-20
x/200b arr-4
x/20b arr-4
x/20b arr-4
s
x/20b arr-4
x/20b arr
x/20b &arr
x/20b &arr-4
p *arr@10
p **arr
p *(*arr + 1)
p *(*arr + 9)
p *(*arr + 10)
p *(*arr + 11)
p *(*arr + 12)
p/10
x/10
x/11
x/10 arr
q
start
c
bt
b main.c:117
r
p i
p arr[i]
p *arr[i]
p *arr
make
r
p arr[i]
n
p arr[i]
p *arr[i]
n
p arr[i]
del
b main.c:57
r
n
n
p str
n
p **arr
p tmp
p p
make
r
c
bt
r
n
n
n
n
p p
p len
n
p len
n
p nLines
make
r
n
p nLines 
n
n
p **arr
n
p p
n
n
p p
n
n
p *(*arr + nLines)
p *arr[nLines]
p arr[nLines]
p *(arr[nLines])
p nLines
p *(*arr+1)
p (*arr+1)
p *(*(arr+1))
p **(arr+1)
p **arr+1
p *(*arr)
p *(*arr +1)
make
r
c
make
r
c
bt
frame 0
p p
n
bt
r
n
n
n
n
n
p p
n
p p
n
p **arr
p **(arr+0)
n
n
n
p p
n
n
p p
n
n
bt
del
b main.c:100
r
p p
p nLines
p tmp
p *(arr[nLines])
p *(*(arr+nLines))
n
n
bt
r
n
r
make
r
n
r
make
r
n
bt
r
del
info b
make
r
ki
q
b main.c:100
r
bt
make
r
make
r
n
n
c
c
c
c
bt
r
n
p *(*arr+nLines)
c
p *(*arr+nLines)
n
p *(*arr+nLines)
n
c
n
p *(*arr+nLines)
n
n
n
n
n
p len
n
p p
n
make
r
c
c
c
c
make
r
c
c
c
c
q
